workflows:
    ios-workflow:
      name: iOS Workflow
      instance_type: mac_mini_m1
      environment:
        groups:
           - ios
           - firebase_creds
           - firebase
        # # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
        #   - app_store_credentials # <-- (APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY)
        #     # APP_STORE_CONNECT_ISSUER_ID <-- Put your App Store Connect Issuer Id here 
        #     # APP_STORE_CONNECT_KEY_IDENTIFIER <-- Put your App Store Connect Key Identifier here 
        #     # APP_STORE_CONNECT_PRIVATE_KEY <-- Put your App Store Connect Private Key here
        #     # See the following link for more details - https://docs.codemagic.io/code-signing-yaml/signing-ios/
        #     # https://appstoreconnect.apple.com/access/api
        #   - certificate_credentials # <-- (CERTIFICATE_PRIVATE_KEY - Put your Certificate Private Key here)
        #   - other
        vars:
          XCODE_WORKSPACE: "native_ios_app.xcworkspace" # <-- Put the name of your workspace here.
#           XCODE_SCHEME: "native_ios_app" # <-- Put the name of your scheme here.
          BUNDLE_ID: "com.mars.native-ios-app" # <-- Put your Bundle Id here.
          XCODE_SCHEME: "native-ios" # <-- Put the name of your scheme here.
#           BUNDLE_ID: "com.mars.native-ios-app" # <-- Put your Bundle Id here.
          # APP_STORE_APP_ID: 1555555551 # <-- Put the app id number here. This is found in App Store Connect > App > General > App Information
        xcode: 14.0
        cocoapods: default
      cache:
           cache_paths:
               - $HOME/Library/Caches/CocoaPods
#       triggering:
#         events:
#           - push
#           - tag
#           - pull_request
#         branch_patterns:
#           - pattern: 'develop'
#             include: true
#             source: true
      scripts:
        - name: 
          script: |
             xcodebuild -resolvePackageDependencies
        - name: Pod inst
          script: |
              pod install
        - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
          script: |
            keychain initialize
        - name: Fetch signing files
          script: |
            app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_DEVELOPMENT --create
#           app-store-connect fetch-signing-files com.mars.native-ios-appUITests.xctrunner --type IOS_APP_DEVELOPMENT --create
        - name: Use system default keychain
          script: |
            keychain add-certificates
        - name: Set up code signing settings on Xcode project
          script: |
            xcode-project use-profiles
#         - name: Increment build number
#           script: |
#             #!/bin/sh
#             set -e
#             set -x
#             cd $FCI_BUILD_DIR
#             # agvtool new-version -all $(($BUILD_NUMBER + 1))
#             agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
#         - name: Firebase 
#           script: |
#             xcodebuild -workspace native_ios_app.xcworkspace \
#             -scheme native-ios \
#             -derivedDataPath ./build/ios_integ \
#             -sdk iphoneos build-for-testing
#             cd ./build/ios_integ/Build/Products
#             zip -r "ios_tests.zip" "Debug-iphoneos" "native-ios_iphoneos15.4-arm64.xctestrun"
        - name: Build ipa for distribution
          script: |
            xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
#          xcodebuild build -workspace "$XCODE_WORKSPACE" -scheme "$XCODE_SCHEME" CODE_SIGNING_REQUIRED=Yes CODE_SIGNING_ALLOWED=No

#         - name: Test Lab upload
#           script: |
#                 echo $GCLOUD_KEY_FILE > ./gcloud_key_file.json
#                 gcloud auth activate-service-account --key-file=gcloud_key_file.json
#                 # Select YOUR Firebase project through which want to run the tests
#                 gcloud --quiet config set project $FIREBASE_PROJECT
#                 gcloud firebase test ios run --test "/Users/builder/clone/build/ios_integ/Build/Products/ios_tests.zip" \
#                 --device model=iphone11pro,version=14.7,locale=en_US,orientation=portrait \
#                 --xcode-version=13.3.1 \
#                 --timeout 10m
      artifacts:
        - build/ios/ipa/*.ipa
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
        - /Users/builder/clone/build/ios_integ/Build/Products/ios_tests.zip
#       publishing:
#         firebase:
#             firebase_service_account: $FIREBASE_SERVICE_ACCOUNT
#             ios:
#               app_id: 1:796756497549:ios:98fbcde6b7d77a1ff13ec4 # Add your iOS app id retrieved from Firebase console
#               groups: # Add one or more groups that you wish to distribute your iOS application to, you can create groups in the Firebase console
#                 - iosTesters
